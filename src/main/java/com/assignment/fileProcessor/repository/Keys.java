/*
 * This file is generated by jOOQ.
*/
package com.assignment.fileProcessor.repository;


import com.assignment.fileProcessor.repository.tables.Department;
import com.assignment.fileProcessor.repository.tables.Disease;
import com.assignment.fileProcessor.repository.tables.Doctor;
import com.assignment.fileProcessor.repository.tables.DocumentReport;
import com.assignment.fileProcessor.repository.tables.MedicalRecord;
import com.assignment.fileProcessor.repository.tables.Patient;
import com.assignment.fileProcessor.repository.tables.records.DepartmentRecord;
import com.assignment.fileProcessor.repository.tables.records.DiseaseRecord;
import com.assignment.fileProcessor.repository.tables.records.DoctorRecord;
import com.assignment.fileProcessor.repository.tables.records.DocumentReportRecord;
import com.assignment.fileProcessor.repository.tables.records.MedicalRecordRecord;
import com.assignment.fileProcessor.repository.tables.records.PatientRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>medical</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DepartmentRecord, Integer> IDENTITY_DEPARTMENT = Identities0.IDENTITY_DEPARTMENT;
    public static final Identity<DiseaseRecord, Integer> IDENTITY_DISEASE = Identities0.IDENTITY_DISEASE;
    public static final Identity<DocumentReportRecord, Integer> IDENTITY_DOCUMENT_REPORT = Identities0.IDENTITY_DOCUMENT_REPORT;
    public static final Identity<MedicalRecordRecord, Integer> IDENTITY_MEDICAL_RECORD = Identities0.IDENTITY_MEDICAL_RECORD;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DepartmentRecord> DEPARTMENT_PKEY = UniqueKeys0.DEPARTMENT_PKEY;
    public static final UniqueKey<DepartmentRecord> DEPARTMENT_NAME_UNQ = UniqueKeys0.DEPARTMENT_NAME_UNQ;
    public static final UniqueKey<DiseaseRecord> DISEASE_PKEY = UniqueKeys0.DISEASE_PKEY;
    public static final UniqueKey<DiseaseRecord> DISEASE_NAME_UNQ = UniqueKeys0.DISEASE_NAME_UNQ;
    public static final UniqueKey<DoctorRecord> DOCTOR_PKEY = UniqueKeys0.DOCTOR_PKEY;
    public static final UniqueKey<DocumentReportRecord> DOCUMENT_REPORT_PKEY = UniqueKeys0.DOCUMENT_REPORT_PKEY;
    public static final UniqueKey<MedicalRecordRecord> MEDICAL_RECORD_PKEY = UniqueKeys0.MEDICAL_RECORD_PKEY;
    public static final UniqueKey<MedicalRecordRecord> MEDICAL_RECORD_UNQ = UniqueKeys0.MEDICAL_RECORD_UNQ;
    public static final UniqueKey<PatientRecord> PATIENT_PKEY = UniqueKeys0.PATIENT_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DoctorRecord, DepartmentRecord> DOCTOR__DOCTOR_DEPARTMENT_ID_FKEY = ForeignKeys0.DOCTOR__DOCTOR_DEPARTMENT_ID_FKEY;
    public static final ForeignKey<DocumentReportRecord, DoctorRecord> DOCUMENT_REPORT__DOCUMENT_REPORT_DOCTOR_ID_FKEY = ForeignKeys0.DOCUMENT_REPORT__DOCUMENT_REPORT_DOCTOR_ID_FKEY;
    public static final ForeignKey<MedicalRecordRecord, DoctorRecord> MEDICAL_RECORD__MEDICAL_RECORD_DOCTOR_ID_FKEY = ForeignKeys0.MEDICAL_RECORD__MEDICAL_RECORD_DOCTOR_ID_FKEY;
    public static final ForeignKey<MedicalRecordRecord, PatientRecord> MEDICAL_RECORD__MEDICAL_RECORD_PATIENT_ID_FKEY = ForeignKeys0.MEDICAL_RECORD__MEDICAL_RECORD_PATIENT_ID_FKEY;
    public static final ForeignKey<MedicalRecordRecord, DiseaseRecord> MEDICAL_RECORD__MEDICAL_RECORD_DISEASE_ID_FKEY = ForeignKeys0.MEDICAL_RECORD__MEDICAL_RECORD_DISEASE_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<DepartmentRecord, Integer> IDENTITY_DEPARTMENT = createIdentity(Department.DEPARTMENT, Department.DEPARTMENT.DEPARTMENT_ID);
        public static Identity<DiseaseRecord, Integer> IDENTITY_DISEASE = createIdentity(Disease.DISEASE, Disease.DISEASE.DISEASE_ID);
        public static Identity<DocumentReportRecord, Integer> IDENTITY_DOCUMENT_REPORT = createIdentity(DocumentReport.DOCUMENT_REPORT, DocumentReport.DOCUMENT_REPORT.REPORT_ID);
        public static Identity<MedicalRecordRecord, Integer> IDENTITY_MEDICAL_RECORD = createIdentity(MedicalRecord.MEDICAL_RECORD, MedicalRecord.MEDICAL_RECORD.RECORD_ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<DepartmentRecord> DEPARTMENT_PKEY = createUniqueKey(Department.DEPARTMENT, "department_pkey", Department.DEPARTMENT.DEPARTMENT_ID);
        public static final UniqueKey<DepartmentRecord> DEPARTMENT_NAME_UNQ = createUniqueKey(Department.DEPARTMENT, "department_name_unq", Department.DEPARTMENT.NAME);
        public static final UniqueKey<DiseaseRecord> DISEASE_PKEY = createUniqueKey(Disease.DISEASE, "disease_pkey", Disease.DISEASE.DISEASE_ID);
        public static final UniqueKey<DiseaseRecord> DISEASE_NAME_UNQ = createUniqueKey(Disease.DISEASE, "disease_name_unq", Disease.DISEASE.NAME);
        public static final UniqueKey<DoctorRecord> DOCTOR_PKEY = createUniqueKey(Doctor.DOCTOR, "doctor_pkey", Doctor.DOCTOR.DOCTOR_ID);
        public static final UniqueKey<DocumentReportRecord> DOCUMENT_REPORT_PKEY = createUniqueKey(DocumentReport.DOCUMENT_REPORT, "document_report_pkey", DocumentReport.DOCUMENT_REPORT.REPORT_ID);
        public static final UniqueKey<MedicalRecordRecord> MEDICAL_RECORD_PKEY = createUniqueKey(MedicalRecord.MEDICAL_RECORD, "medical_record_pkey", MedicalRecord.MEDICAL_RECORD.RECORD_ID);
        public static final UniqueKey<MedicalRecordRecord> MEDICAL_RECORD_UNQ = createUniqueKey(MedicalRecord.MEDICAL_RECORD, "medical_record_unq", MedicalRecord.MEDICAL_RECORD.DOCTOR_ID, MedicalRecord.MEDICAL_RECORD.PATIENT_ID, MedicalRecord.MEDICAL_RECORD.DISEASE_ID);
        public static final UniqueKey<PatientRecord> PATIENT_PKEY = createUniqueKey(Patient.PATIENT, "patient_pkey", Patient.PATIENT.PATIENT_ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<DoctorRecord, DepartmentRecord> DOCTOR__DOCTOR_DEPARTMENT_ID_FKEY = createForeignKey(com.assignment.fileProcessor.repository.Keys.DEPARTMENT_PKEY, Doctor.DOCTOR, "doctor__doctor_department_id_fkey", Doctor.DOCTOR.DEPARTMENT_ID);
        public static final ForeignKey<DocumentReportRecord, DoctorRecord> DOCUMENT_REPORT__DOCUMENT_REPORT_DOCTOR_ID_FKEY = createForeignKey(com.assignment.fileProcessor.repository.Keys.DOCTOR_PKEY, DocumentReport.DOCUMENT_REPORT, "document_report__document_report_doctor_id_fkey", DocumentReport.DOCUMENT_REPORT.DOCTOR_ID);
        public static final ForeignKey<MedicalRecordRecord, DoctorRecord> MEDICAL_RECORD__MEDICAL_RECORD_DOCTOR_ID_FKEY = createForeignKey(com.assignment.fileProcessor.repository.Keys.DOCTOR_PKEY, MedicalRecord.MEDICAL_RECORD, "medical_record__medical_record_doctor_id_fkey", MedicalRecord.MEDICAL_RECORD.DOCTOR_ID);
        public static final ForeignKey<MedicalRecordRecord, PatientRecord> MEDICAL_RECORD__MEDICAL_RECORD_PATIENT_ID_FKEY = createForeignKey(com.assignment.fileProcessor.repository.Keys.PATIENT_PKEY, MedicalRecord.MEDICAL_RECORD, "medical_record__medical_record_patient_id_fkey", MedicalRecord.MEDICAL_RECORD.PATIENT_ID);
        public static final ForeignKey<MedicalRecordRecord, DiseaseRecord> MEDICAL_RECORD__MEDICAL_RECORD_DISEASE_ID_FKEY = createForeignKey(com.assignment.fileProcessor.repository.Keys.DISEASE_PKEY, MedicalRecord.MEDICAL_RECORD, "medical_record__medical_record_disease_id_fkey", MedicalRecord.MEDICAL_RECORD.DISEASE_ID);
    }
}
