/*
 * This file is generated by jOOQ.
*/
package com.assignment.fileProcessor.repository.tables.records;


import com.assignment.fileProcessor.repository.tables.MedicalRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MedicalRecordRecord extends UpdatableRecordImpl<MedicalRecordRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1434995529;

    /**
     * Setter for <code>medical.medical_record.record_id</code>.
     */
    public void setRecordId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>medical.medical_record.record_id</code>.
     */
    public Integer getRecordId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>medical.medical_record.doctor_id</code>.
     */
    public void setDoctorId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>medical.medical_record.doctor_id</code>.
     */
    public Integer getDoctorId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>medical.medical_record.patient_id</code>.
     */
    public void setPatientId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>medical.medical_record.patient_id</code>.
     */
    public Integer getPatientId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>medical.medical_record.disease_id</code>.
     */
    public void setDiseaseId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>medical.medical_record.disease_id</code>.
     */
    public Integer getDiseaseId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return MedicalRecord.MEDICAL_RECORD.RECORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return MedicalRecord.MEDICAL_RECORD.DOCTOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return MedicalRecord.MEDICAL_RECORD.PATIENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return MedicalRecord.MEDICAL_RECORD.DISEASE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDoctorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPatientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getDiseaseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalRecordRecord value1(Integer value) {
        setRecordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalRecordRecord value2(Integer value) {
        setDoctorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalRecordRecord value3(Integer value) {
        setPatientId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalRecordRecord value4(Integer value) {
        setDiseaseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalRecordRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MedicalRecordRecord
     */
    public MedicalRecordRecord() {
        super(MedicalRecord.MEDICAL_RECORD);
    }

    /**
     * Create a detached, initialised MedicalRecordRecord
     */
    public MedicalRecordRecord(Integer recordId, Integer doctorId, Integer patientId, Integer diseaseId) {
        super(MedicalRecord.MEDICAL_RECORD);

        set(0, recordId);
        set(1, doctorId);
        set(2, patientId);
        set(3, diseaseId);
    }
}
