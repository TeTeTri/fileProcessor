apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'nu.studer.jooq'

jar {
    baseName = 'fileProcessor'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-jooq')
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
    runtime('com.h2database:h2')
    runtime('org.postgresql:postgresql')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url('https://plugins.gradle.org/m2/')
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.jooq:jooq-codegen:3.9.3')
        classpath('org.jooq:jooq-meta:3.9.3')
        classpath('nu.studer:gradle-jooq-plugin:2.0.6')
    }
}

jooq {
    version = '3.9.3'
    edition = 'OSS'
    dependencies {
        jooqRuntime('org.postgresql:postgresql:42.1.1')
    }
    databaseToXML(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/postgres'
            user = 'postgres'
            password = 'postgraze'
        }
        generator {
            name = 'org.jooq.util.XMLGenerator'
            database {
                name = 'org.jooq.util.postgres.PostgresDatabase'
                inputSchema = 'medical'
            }
            target {
                directory = 'src/main/resources'
            }
        }
    }
    xmlToAPI(sourceSets.main) {
        generator {
            database {
                name = 'org.jooq.util.xml.XMLDatabase'
                inputSchema = 'medical'
                properties {
                    property {
                        key = 'dialect'
                        value = 'POSTGRES'
                    }
                    property {
                        key = 'xml-file'
                        value = 'src/main/resources/information_schema.xml'
                    }
                }
            }
            target {
                packageName = 'com.assignment.fileProcessor.repository'
                directory = 'src/main/java'
            }
        }
    }
}
